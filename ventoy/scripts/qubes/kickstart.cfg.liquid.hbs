%pre
# pre section
#----- partitioning logic below--------------
#!/bin/bash
# pick the first drive that is not removable and is over MINSIZE
DIR="/sys/block"

# minimum size of hard drive needed specified in GIGABYTES
# set to 200 to exclude common thumbdrive sizes, and also
# keep it small enough to cope with VMs
MINSIZE=200

ROOTDRIVE=""

# /sys/block/*/size is in 512 byte chunks
for DEV in $(cd $DIR; ls -d nvme?n? sd? hd? 2>/dev/null); do
  if [ -d $DIR/$DEV ]; then
    REMOVABLE=`cat $DIR/$DEV/removable`
    if (( $REMOVABLE == 0 )); then
      echo $DEV
      SIZE=`cat $DIR/$DEV/size`
      GB=$(($SIZE/2**21))
      if [ $GB -gt $MINSIZE ]; then
        echo "Found matching drive: $(($SIZE/2**21)) GB"
        ROOTDRIVE=$DEV
        break
      fi
    fi
  fi
done

echo "ROOTDRIVE=$ROOTDRIVE"

cat << EOF >> /tmp/partition-include

ignoredisk --only-use=$ROOTDRIVE
zerombr
bootloader --location=mbr --boot-drive=$ROOTDRIVE
clearpart --all --drives=$ROOTDRIVE --initlabel

# Create partitions required by system type (e.g. /boot/efi)
reqpart

part /boot --fstype=ext4 --size=1024 --ondisk=$ROOTDRIVE
part swap --recommended --ondisk=$ROOTDRIVE

part btrfs.main --fstype=btrfs --encrypted --grow --fsoptions="compress=zstd:1,discard=async,space_cache=v2" --passphrase="{{ kickstart.luksPassword }}" --ondisk=$ROOTDRIVE

btrfs none --label=qubes-btrfs btrfs.main
btrfs / --subvol --name=dom0_root qubes-btrfs
btrfs /etc --subvol --name=dom0_etc qubes-btrfs
btrfs /home --subvol --name=dom0_home qubes-btrfs
btrfs /tmp --subvol --name=dom0_tmp qubes-btrfs
btrfs /usr --subvol --name=dom0_usr qubes-btrfs
btrfs /var --subvol --name=dom0_var qubes-btrfs
btrfs /var/log --subvol --name=dom0_var_log qubes-btrfs
btrfs /var/lib/qubes --subvol --name=qubes_vms qubes-btrfs
btrfs /var/lib/qubes/appvms --subvol --name=qubes_appvms qubes-btrfs
btrfs /var/lib/qubes/backup --subvol --name=qubes_backup qubes-btrfs
btrfs /var/lib/qubes/updates --subvol --name=qubes_updates qubes-btrfs
btrfs /var/lib/qubes/vm-kernels --subvol --name=qubes_kernels qubes-btrfs
btrfs /var/lib/qubes/vm-templates --subvol --name=qubes_templates qubes-btrfs

EOF
%end

%include /tmp/partition-include

### Initialize ###
cdrom
text

### Protective Measures ###
firewall
network  --hostname=dom0
authconfig --enableshadow --passalgo=sha512
sshpw --lock
rootpw --lock

### Account ###
keyboard --vckeymap={{ kickstart.keymap }} --xlayouts='{{ kickstart.xlayouts }}'
lang {{ kickstart.lang }}
timezone {{ kickstart.timezone }} --isUtc
user --groups=wheel,qubes --name={{ kickstart.username }} --password={{ execSync (append 'openssl passwd -1 -stdin <<< "' (append kickstart.password '"')) }} --iscryped

### Initial Boot Settings ###
xconfig  --startxonboot
firstboot --enable

### Power Off After Installation ###
reboot

### Extra Packages ###
%packages
@^qubes-xfce
%end

%post --nochroot
set -e
# Copy playbooks
mkdir -p /mnt/sysimage/etc/ansible
cp -rf /run/install/repo/.modules/gas-station /mnt/sysimage/etc/ansible

# Set up Qubes Ansible connection plugin symlink
mkdir -p /mnt/sysimage/usr/share/ansible/plugins/connection
ln -s /mnt/sysimage/etc/ansible/scripts/connection/qubes.py /usr/share/ansible/plugins/connection/qubes.py

# Set up Qubes Ansible library symlink
mkdir -p /mnt/sysimage/usr/share/ansible/library
ln -s /mnt/sysimage/etc/ansible/scripts/library/qubesos.py /usr/share/ansible/library/qubesos.py

# Enable auto-login on the first boot
cp /etc/lightdm/lightdm.conf /etc/lightdm/lightdm.conf.bak
echo 'autologin-user = user' >> /etc/lightdm/lightdm.conf
echo 'autologin-user-timeout = 0' >> /etc/lightdm/lightdm.conf

# Run quickstart on first boot
mkdir -p /mnt/sysimage/home/{{ kickstart.username }}/.config/autostart
cp /run/install/repo/ventoy/scripts/qubes/first-boot.desktop /mnt/sysimage/home/{{ kickstart.username }}/.config/autostart/first-boot.desktop
cp /run/install/repo/ventoy/scripts/qubes/quickstart /mnt/sysimage/usr/bin/quickstart

%end

%anaconda
pwpolicy root --minlen=0 --minquality=1 --notstrict --nochanges --emptyok
pwpolicy user --minlen=0 --minquality=1 --notstrict --nochanges --emptyok
pwpolicy luks --minlen=0 --minquality=1 --notstrict --nochanges --emptyok
%end
