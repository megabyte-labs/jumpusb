# Reference: https://github.com/Qubes-Community/Contents/blob/master/docs/hardware/Autonomous%20Qubes-install%20(kickstart).md
%pre
password="DecryptPlease!!!"
echo "Luks Password: $password"
echo "autopart --type thinp --encrypted --passphrase=\"$password\"" > /tmp/part-include

# wipe first 5GB of the disk workaround for clearpart not working proper
dd if=/dev/zero of=/dev/DISK_INSTALL bs=1000MB count=5
%end


# Kickstart file, preconfiguring the Qubes installer settings.

# Initializing installer
cdrom
text

# Protective measures, including redundancy measures.
ignoredisk --only-use=change
firewall
network  --hostname=dom0
authconfig --enableshadow --passalgo=sha512
sshpw --lock
rootpw --lock

# Account details
keyboard --vckeymap=us --xlayouts='us'
lang en_US.UTF-8
timezone America/New_York --isUtc
# Generate a hashed password with the following line:
# python -c 'import crypt,getpass;pw=getpass.getpass();print(crypt.crypt(pw) if (pw==getpass.getpass("Confirm: ")) else exit())'
user --groups=wheel,qubes --name=brian --password=C0it48Xe/YNEE --iscryped

# Boot
# With encrypted /boot directory (Password can be generated with GRUB2):
#bootloader --location=mbr --boot-drive=change --password=change --iscrypted
# Without encrypted /boot directory:
bootloader --location=mbr --boot-drive=change

# Disk and Partitioning
clearpart --all --initlabel --drives=change
autopart

# Boot settings
xconfig  --startxonboot
firstboot --enable

%packages
@^qubes-xfce
%end

%anaconda
pwpolicy root --minlen=0 --minquality=1 --notstrict --nochanges --emptyok
pwpolicy user --minlen=0 --minquality=1 --notstrict --nochanges --emptyok
pwpolicy luks --minlen=0 --minquality=1 --notstrict --nochanges --emptyok
%end
